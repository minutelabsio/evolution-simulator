[package]
name = "app"
version = "0.1.0"
authors = ["wellcaffeinated <well.caffeinated@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib"]

[features]
default = ["console_error_panic_hook"]

[dependencies.wasm-bindgen]
version = "^0.2"
features = ["serde-serialize"]

[dependencies]
# js-sys = "0.3"
nalgebra = { version = "0.27", features = ["serde-serialize"] }
serde = "^1.0.59"
serde_derive = "^1.0.59"
rand = { version = "0.6.1", features = ["wasm-bindgen"] }
uuid = { version = "0.8", features = ["serde", "v4", "wasm-bindgen"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
# wee_alloc = { version = "0.4.2", optional = false }

# for interacting with javascript objects
# [dependencies.web-sys]
# version = "0.3.4"
# features = ['Window', 'Performance', 'PerformanceTiming']

[dependencies.web-sys]
version = "0.3"
features = [
  "console",
]

[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.release]
lto = true
